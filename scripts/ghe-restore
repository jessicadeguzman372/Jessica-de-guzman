#!/bin/sh
#/ Usage: ghe-restore [-v] [-s <snapshot-id>] [<host>]
#/ Restores a GitHub instance from local backup snapshots. The <host> is the
#/ hostname or IP of the GitHub instance. The <host> may be omitted when
#/ the GHE_RESTORE_HOST config variable is set in backup.config. When a <host>
#/ argument is provided, it always overrides the configured restore host.
#/
#/ Note that the host must be reachable and your SSH key must be setup as
#/ described in the following help article:
#/
#/ <https://enterprise.github.com/help/articles/adding-an-ssh-key-for-shell-access>
#/
#/ When the -s argument is given, restore from the snapshot with the given id.
#/ Available snapshots can be listed under the data directory.
#/
#/ When the -v argument is given, enable verbose output and show more information
#/ about what's being transferred.
set -e

# Bring in the backup configuration.
cd $(dirname "$0")/..
. scripts/ghe-backup-config

# The snapshot directory we're restoring from. This is the 'current' snapshot
# by default but may be overridden with the -s flag. Additional restore scripts
# spawned must abide by this variable as well.
GHE_RESTORE_SNAPSHOT="current"
export GHE_RESTORE_SNAPSHOT

# Parse snapshot argument if provided
if [ "$1" = "-s" ]; then
    GHE_RESTORE_SNAPSHOT="$(basename "$2")"
    shift 2
fi

# Grab the host arg
host="${1:-$GHE_RESTORE_HOST}"

# Show usage with no <host>
[ -z "$host" ] && print_usage

# Resolve the snapshot id if we're restoring from current. This is mostly
# just for logging.
if [ "$GHE_RESTORE_SNAPSHOT" = "current" ]; then
    GHE_RESTORE_SNAPSHOT=$(ls -ld "$GHE_DATA_DIR"/current 2>/dev/null | sed 's/.*-> //')
fi

# Bail out if we don't have a good snapshot.
if [ ! -d "$GHE_DATA_DIR/$GHE_RESTORE_SNAPSHOT" ]; then
    echo "Error: Snapshot '$GHE_RESTORE_SNAPSHOT' doesn't exist." 1>&2
    exit 1
fi

snapshot_dir="$GHE_DATA_DIR/$GHE_RESTORE_SNAPSHOT"
echo "Starting restore of $host from snapshot $GHE_RESTORE_SNAPSHOT"

# Make sure we have SSH connectivity to the restore host
ghe-host-check "$host"

echo "Restoring Git repositories ..."
ghe-${GHE_BACKUP_STRATEGY}-restore "$host"

echo "Restoring GitHub Pages ..."
ssh "admin@$host" -- 'ghe-import-pages' < "$snapshot_dir/pages.tar"

echo "Restoring MySQL database ..."
gzip -dc "$snapshot_dir/mysql.sql.gz" | ssh "admin@$host" -- 'ghe-import-mysql'

echo "Restoring Redis database ..."
ssh "admin@$host" -- 'ghe-import-redis' < "$snapshot_dir/redis.rdb"

echo "Restoring SSH public keys ..."
ssh "admin@$host" -- 'ghe-import-authorized-keys' < "$snapshot_dir/authorized-keys.json"

echo "Restoring Elasticsearch indices ..."
ssh "admin@$host" -- 'ghe-import-es-indices' < "$snapshot_dir/es-indices.tar"

echo "Restoring SSH host keys ..."
ssh "admin@$host" -- 'ghe-import-ssh-host-keys' < "$snapshot_dir/ssh-host-keys.tar"

echo "Completed restore of $host from snapshot $GHE_RESTORE_SNAPSHOT"
