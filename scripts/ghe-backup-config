#!/bin/sh
# Usage: . ghe-backup-config
# GitHub Enterprise backup shell configuration.
#
# This file is sourced by the various utilities under scripts to load
# in backup configuration and ensure things are configured properly.
#
# All scripts should start with the following:
#
#     cd $(dirname "$0")/..
#     . scripts/ghe-backup-config
#

# Assume the current directory is the root. This should be fine so long as all
# scripts source us in according to the instructions above.
GHE_BACKUP_ROOT="$(pwd)"

# Add the scripts dir to PATH
PATH="$GHE_BACKUP_ROOT/scripts:$PATH"

# The backup config file. This may be set in the environment.
: ${GHE_BACKUP_CONFIG:="$GHE_BACKUP_ROOT/backup.config"}

# Parse out -v (verbose) argument
if [ "$1" = "-v" ]; then
    GHE_VERBOSE=true
    shift
fi
export GHE_VERBOSE

# If verbose logging is enabled, redirect fd 3 to stdout; otherwise, redirect it
# to /dev/null. Write verbose output to fd 3.
if [ -n "$GHE_VERBOSE" ]; then
    exec 3>&1
else
    exec 3>/dev/null
fi

# Check that the config file exists before we source it in.
if [ ! -f "$GHE_BACKUP_CONFIG" ]; then
    echo "Error: The backup config file ('$GHE_BACKUP_CONFIG') doesn't exist." 1>&2
    exit 2
fi

# Source in the backup config file.
. "$GHE_BACKUP_CONFIG"

# Check that the GHE hostname is set.
if [ -z "$GHE_HOSTNAME" ]; then
    echo "Error: GHE_HOSTNAME not set in config file." 1>&2
    exit 2
fi

# Check that the data directory is set and create it if it doesn't exist.
if [ ! -d "$GHE_DATA_DIR" ]; then
    echo "Creating the backup data directory ..."
    mkdir -p "$GHE_DATA_DIR"
fi

# Set some defaults if needed
: ${GHE_BACKUP_STRATEGY:=rsync}

# Generate a backup timestamp if one has not already been generated.
# We export the variable so the process group shares the same value.
: ${GHE_SNAPSHOT_TIMESTAMP:=$(date +"%Y%m%dT%H%M%S")}
export GHE_SNAPSHOT_TIMESTAMP

# Set the current snapshot directory to <data-dir>/<timestamp>. This is where
# all backups should be written for the current invocation.
GHE_SNAPSHOT_DIR="$GHE_DATA_DIR"/"$GHE_SNAPSHOT_TIMESTAMP"

# The location of Git repository data on the remote side. This is always
# "/data/repositories" for GitHub instances. Use of this variable allows
# the location to be overridden in tests.
: ${GHE_REMOTE_DATA_DIR:="/data/repositories"}

# The location of the license file on the remote side. This is always
# "/data/enterprise/enterprise.ghl" for GitHub instances. Use of this variable
# allows the location to be overridden in tests.
: ${GHE_REMOTE_LICENSE_FILE:="/data/enterprise/enterprise.ghl"}

###############################################################################
### Utility functions

# Function to print usage embedded in a scripts opening doc comments.
print_usage () {
    grep '^#/' <"$0" | cut -c 4-
    exit ${1:-1}
}

# Check for a "--help" arg and show usage
for a in "$@"; do
    if [ "$a" = "--help" ]; then
        print_usage
    fi
done
