#!/bin/sh
#/ Usage: ghe-backup [-v]
#/ Take snapshots of all GitHub Enterprise data, including Git repository data,
#/ the MySQL database, instance settings, GitHub Pages data, etc.
#/
#/ With -v, enable verbose output and show more information about what's being
#/ transferred.
set -e

# Bring in the backup configuration
cd $(dirname "$0")/..
. scripts/ghe-backup-config

echo "Starting backup of $GHE_HOSTNAME in snapshot $GHE_SNAPSHOT_TIMESTAMP"

# Make sure we have SSH connectivity to the GHE host
ghe-host-check

# Create the timestamped snapshot directory where files for this run will live.
mkdir -p "$GHE_SNAPSHOT_DIR"

echo "Backing up GitHub settings ..."
ssh admin@"$GHE_HOSTNAME" -- 'ghe-export-settings' > "$GHE_SNAPSHOT_DIR"/settings.json
ssh admin@"$GHE_HOSTNAME" -- "cat '$GHE_REMOTE_LICENSE_FILE'" > "$GHE_SNAPSHOT_DIR"/enterprise.ghl

echo "Backing up Git repositories ..."
ghe-${GHE_BACKUP_STRATEGY}-backup

echo "Backing up GitHub Pages ..."
ssh admin@"$GHE_HOSTNAME" -- 'ghe-export-pages' > "$GHE_SNAPSHOT_DIR"/pages.tar

echo "Backing up MySQL database ..."
ssh admin@"$GHE_HOSTNAME" -- 'ghe-export-mysql | gzip' > "$GHE_SNAPSHOT_DIR"/mysql.sql.gz

echo "Backing up Redis database ..."
ssh admin@"$GHE_HOSTNAME" -- 'ghe-export-redis' > "$GHE_SNAPSHOT_DIR"/redis.rdb

echo "Backing up SSH public keys ..."
ssh admin@"$GHE_HOSTNAME" -- 'ghe-export-authorized-keys' > "$GHE_SNAPSHOT_DIR"/authorized-keys.json

echo "Backing up SSH host keys ..."
ssh admin@"$GHE_HOSTNAME" -- 'ghe-export-ssh-host-keys' > "$GHE_SNAPSHOT_DIR"/ssh-host-keys.tar

echo "Backing up Elasticsearch indices ..."
ssh admin@"$GHE_HOSTNAME" -- 'ghe-export-es-indices' > "$GHE_SNAPSHOT_DIR"/es-indices.tar

# Update the current symlink to point to the new snapshot
rm -f "$GHE_DATA_DIR/current"
ln -s "$GHE_SNAPSHOT_TIMESTAMP" "$GHE_DATA_DIR/current"

echo "Completed backup of $GHE_HOSTNAME in snapshot $GHE_SNAPSHOT_TIMESTAMP at $(date +"%H:%M:%S")"
