#!/bin/sh
#/ Usage: ghe-backup-pages-rsync
#/ Take an online, incremental snapshot of all Pages data.
#/
#/ Note: This command typically isn't called directly. It's invoked by
#/ ghe-backup when the rsync strategy is used.
set -e

# Bring in the backup configuration
cd $(dirname "$0")/..
. libexec/ghe-backup-config

# Verify rsync is available.
if ! rsync --version 1>/dev/null 2>&1; then
    echo "Error: rsync not found." 1>&2
    exit 1
fi

# Grab the host
host="$GHE_HOSTNAME"

# Perform a host-check and establish GHE_REMOTE_XXX variables.
ghe_remote_version_required "$host"

# Verify that the /data/pages directory exists. It won't if no pages sites have
# been published under some versions.
ghe-ssh "$host" -- "[ -d '$GHE_REMOTE_DATA_USER_DIR/pages' ]" || exit 0

# If we have a previous increment, avoid transferring existing files via rsync's
# --link-dest support. This also decreases physical space usage considerably.
if [ -d "$GHE_DATA_DIR/current/pages" ]; then
    link_dest="--link-dest=../../current/pages"
fi

# Transfer Pages data from a GitHub instance to the current snapshot
# directory, using a previous snapshot to avoid transferring files that have
# already been transferred.
ghe-rsync -avz \
    -e "ghe-ssh -p $(ssh_port_part "$host")" \
    --rsync-path='sudo -u git rsync' \
    $link_dest \
    "$(ssh_host_part "$host"):$GHE_REMOTE_DATA_USER_DIR/pages/" \
    "$GHE_SNAPSHOT_DIR/pages" 1>&3
